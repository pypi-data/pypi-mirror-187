
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <networktables/NTSendable.h>

#include <networktables/NTSendableBuilder.h>



#include <rpygen/wpi__Sendable.hpp>

namespace rpygen {

using namespace nt;


template <typename CfgBase>
using PyTrampolineCfgBase_nt__NTSendable =
    PyTrampolineCfg_wpi__Sendable<
CfgBase
>;

template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_nt__NTSendable :
    PyTrampolineCfgBase_nt__NTSendable< CfgBase>
{
    using Base = nt::NTSendable;

    using override_base_InitSendable_RTNTSendableBuilder = nt::NTSendable;
    using override_base_InitSendable_RTSendableBuilder = nt::NTSendable;
};


template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_nt__NTSendable =
    PyTrampoline_wpi__Sendable<
        PyTrampolineBase
        
        , PyTrampolineCfg
    >
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_nt__NTSendable : PyTrampolineBase_nt__NTSendable<PyTrampolineBase, PyTrampolineCfg> {
    using PyTrampolineBase_nt__NTSendable<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_nt__NTSendable;



#ifndef RPYGEN_DISABLE_InitSendable_RTNTSendableBuilder
    void InitSendable(nt::NTSendableBuilder& builder) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        RPYBUILD_OVERRIDE_PURE_NAME(NTSendable, PYBIND11_TYPE(void), LookupBase,
            "initSendable", InitSendable, builder);
    }
#endif

#ifndef RPYGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(wpi::SendableBuilder& builder) override {
        using LookupBase = typename PyTrampolineCfg::Base;
        using CxxCallBase = typename PyTrampolineCfg::override_base_InitSendable_RTSendableBuilder;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
            "initSendable", builder);
        return CxxCallBase::InitSendable(std::forward<decltype(builder)>(builder));
    }
#endif




};

}; // namespace rpygen
