# coding: utf-8

"""
    Synctera API

    <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>   # noqa: E501

    The version of the OpenAPI document: 0.32.0.dev5
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from synctera_client import schemas  # noqa: F401


class EventType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The reason for issuing/re-issuing a card
    """
    
    @schemas.classproperty
    def USERTRANSITION(cls):
        return cls("usertransition")
    
    @schemas.classproperty
    def BUSINESSTRANSITION(cls):
        return cls("businesstransition")
    
    @schemas.classproperty
    def CARDTRANSITION(cls):
        return cls("cardtransition")
    
    @schemas.classproperty
    def TRANSACTION(cls):
        return cls("transaction")
    
    @schemas.classproperty
    def DIGITALWALLETTOKENTRANSITION(cls):
        return cls("digitalwallettokentransition")
    
    @schemas.classproperty
    def CHARGEBACKTRANSITION(cls):
        return cls("chargebacktransition")
    
    @schemas.classproperty
    def COMMANDOMODETRANSITION(cls):
        return cls("commandomodetransition")
    
    @schemas.classproperty
    def CASETRANSITION(cls):
        return cls("casetransition")
    
    @schemas.classproperty
    def DIRECTDEPOSITTRANSITION(cls):
        return cls("directdeposittransition")
    
    @schemas.classproperty
    def BANKTRANSFERTRANSITION(cls):
        return cls("banktransfertransition")
