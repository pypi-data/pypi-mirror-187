"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import ft_capability_pb2
import ft_error_pb2
import ft_flags_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _stream_control_commands:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _stream_control_commandsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_stream_control_commands.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    stop: _stream_control_commands.ValueType  # 0
    start: _stream_control_commands.ValueType  # 1

class stream_control_commands(_stream_control_commands, metaclass=_stream_control_commandsEnumTypeWrapper): ...

stop: stream_control_commands.ValueType  # 0
start: stream_control_commands.ValueType  # 1
global___stream_control_commands = stream_control_commands

@typing_extensions.final
class stream_thread_request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    THREADID_FIELD_NUMBER: builtins.int
    TICK_TIME_MS_FIELD_NUMBER: builtins.int
    THREADCOMMENT_FIELD_NUMBER: builtins.int
    threadid: builtins.int
    tick_time_ms: builtins.int
    threadcomment: builtins.str
    def __init__(
        self,
        *,
        threadid: builtins.int = ...,
        tick_time_ms: builtins.int = ...,
        threadcomment: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["threadcomment", b"threadcomment", "threadid", b"threadid", "tick_time_ms", b"tick_time_ms"]) -> None: ...

global___stream_thread_request = stream_thread_request

@typing_extensions.final
class stream_thread_response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERR_FIELD_NUMBER: builtins.int
    THREADID_FIELD_NUMBER: builtins.int
    @property
    def err(self) -> ft_error_pb2.errstatus: ...
    threadid: builtins.int
    def __init__(
        self,
        *,
        err: ft_error_pb2.errstatus | None = ...,
        threadid: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["err", b"err"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["err", b"err", "threadid", b"threadid"]) -> None: ...

global___stream_thread_response = stream_thread_response

@typing_extensions.final
class stream_registration_request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    THREADID_FIELD_NUMBER: builtins.int
    REQ_FIELD_NUMBER: builtins.int
    NTICKS_FIELD_NUMBER: builtins.int
    STREAMCOMMENT_FIELD_NUMBER: builtins.int
    threadid: builtins.int
    @property
    def req(self) -> ft_capability_pb2.capability_request: ...
    nticks: builtins.int
    streamcomment: builtins.str
    def __init__(
        self,
        *,
        threadid: builtins.int = ...,
        req: ft_capability_pb2.capability_request | None = ...,
        nticks: builtins.int = ...,
        streamcomment: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["req", b"req"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["nticks", b"nticks", "req", b"req", "streamcomment", b"streamcomment", "threadid", b"threadid"]) -> None: ...

global___stream_registration_request = stream_registration_request

@typing_extensions.final
class stream_registration_response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERR_FIELD_NUMBER: builtins.int
    STREAMHANDLE_FIELD_NUMBER: builtins.int
    THREADID_FIELD_NUMBER: builtins.int
    @property
    def err(self) -> ft_error_pb2.errstatus: ...
    streamhandle: builtins.int
    threadid: builtins.int
    def __init__(
        self,
        *,
        err: ft_error_pb2.errstatus | None = ...,
        streamhandle: builtins.int = ...,
        threadid: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["err", b"err"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["err", b"err", "streamhandle", b"streamhandle", "threadid", b"threadid"]) -> None: ...

global___stream_registration_response = stream_registration_response

@typing_extensions.final
class stream_control(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STREAMHANDLE_FIELD_NUMBER: builtins.int
    CMD_FIELD_NUMBER: builtins.int
    streamhandle: builtins.int
    cmd: global___stream_control_commands.ValueType
    def __init__(
        self,
        *,
        streamhandle: builtins.int = ...,
        cmd: global___stream_control_commands.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cmd", b"cmd", "streamhandle", b"streamhandle"]) -> None: ...

global___stream_control = stream_control

@typing_extensions.final
class streamlist(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERR_FIELD_NUMBER: builtins.int
    THREADS_FIELD_NUMBER: builtins.int
    @property
    def err(self) -> ft_error_pb2.errstatus: ...
    @property
    def threads(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___stream_thread_response]: ...
    def __init__(
        self,
        *,
        err: ft_error_pb2.errstatus | None = ...,
        threads: collections.abc.Iterable[global___stream_thread_response] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["err", b"err"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["err", b"err", "threads", b"threads"]) -> None: ...

global___streamlist = streamlist

@typing_extensions.final
class streamthreadlist(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERR_FIELD_NUMBER: builtins.int
    STREAMS_FIELD_NUMBER: builtins.int
    @property
    def err(self) -> ft_error_pb2.errstatus: ...
    @property
    def streams(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___stream_registration_response]: ...
    def __init__(
        self,
        *,
        err: ft_error_pb2.errstatus | None = ...,
        streams: collections.abc.Iterable[global___stream_registration_response] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["err", b"err"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["err", b"err", "streams", b"streams"]) -> None: ...

global___streamthreadlist = streamthreadlist

@typing_extensions.final
class serverflagupdate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TSTAMP_FIELD_NUMBER: builtins.int
    UPDFLG_FIELD_NUMBER: builtins.int
    @property
    def tstamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updflg(self) -> ft_flags_pb2.serverflag: ...
    def __init__(
        self,
        *,
        tstamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        updflg: ft_flags_pb2.serverflag | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tstamp", b"tstamp", "updflg", b"updflg"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["tstamp", b"tstamp", "updflg", b"updflg"]) -> None: ...

global___serverflagupdate = serverflagupdate
