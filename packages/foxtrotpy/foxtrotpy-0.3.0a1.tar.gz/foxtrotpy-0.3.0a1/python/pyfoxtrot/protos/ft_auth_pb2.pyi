"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import ft_error_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class auth_data(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USERID_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    AUTHLEVEL_FIELD_NUMBER: builtins.int
    AUTHFLAGS_FIELD_NUMBER: builtins.int
    EXPIRY_FIELD_NUMBER: builtins.int
    userid: builtins.str
    token: builtins.bytes
    authlevel: builtins.int
    authflags: builtins.int
    @property
    def expiry(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        userid: builtins.str = ...,
        token: builtins.bytes = ...,
        authlevel: builtins.int = ...,
        authflags: builtins.int = ...,
        expiry: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expiry", b"expiry"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authflags", b"authflags", "authlevel", b"authlevel", "expiry", b"expiry", "token", b"token", "userid", b"userid"]) -> None: ...

global___auth_data = auth_data

@typing_extensions.final
class auth_request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USERID_FIELD_NUMBER: builtins.int
    userid: builtins.str
    def __init__(
        self,
        *,
        userid: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["userid", b"userid"]) -> None: ...

global___auth_request = auth_request

@typing_extensions.final
class auth_challenge(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERR_FIELD_NUMBER: builtins.int
    CHALLENGEID_FIELD_NUMBER: builtins.int
    CHALLENGE_FIELD_NUMBER: builtins.int
    @property
    def err(self) -> ft_error_pb2.errstatus: ...
    challengeid: builtins.int
    challenge: builtins.bytes
    def __init__(
        self,
        *,
        err: ft_error_pb2.errstatus | None = ...,
        challengeid: builtins.int = ...,
        challenge: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["err", b"err"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["challenge", b"challenge", "challengeid", b"challengeid", "err", b"err"]) -> None: ...

global___auth_challenge = auth_challenge

@typing_extensions.final
class auth_response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHALLENGEID_FIELD_NUMBER: builtins.int
    USERID_FIELD_NUMBER: builtins.int
    SIG_FIELD_NUMBER: builtins.int
    challengeid: builtins.int
    userid: builtins.str
    sig: builtins.bytes
    def __init__(
        self,
        *,
        challengeid: builtins.int = ...,
        userid: builtins.str = ...,
        sig: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["challengeid", b"challengeid", "sig", b"sig", "userid", b"userid"]) -> None: ...

global___auth_response = auth_response

@typing_extensions.final
class auth_confirm(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERR_FIELD_NUMBER: builtins.int
    SESSIONKEY_FIELD_NUMBER: builtins.int
    EXPIRY_FIELD_NUMBER: builtins.int
    AUTHLEVEL_FIELD_NUMBER: builtins.int
    @property
    def err(self) -> ft_error_pb2.errstatus: ...
    sessionkey: builtins.bytes
    expiry: builtins.int
    authlevel: builtins.int
    def __init__(
        self,
        *,
        err: ft_error_pb2.errstatus | None = ...,
        sessionkey: builtins.bytes = ...,
        expiry: builtins.int = ...,
        authlevel: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["err", b"err"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authlevel", b"authlevel", "err", b"err", "expiry", b"expiry", "sessionkey", b"sessionkey"]) -> None: ...

global___auth_confirm = auth_confirm

@typing_extensions.final
class sasl_auth_data(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERR_FIELD_NUMBER: builtins.int
    SASL_DATA_FIELD_NUMBER: builtins.int
    AUTHDAT_FIELD_NUMBER: builtins.int
    @property
    def err(self) -> ft_error_pb2.errstatus: ...
    sasl_data: builtins.bytes
    @property
    def authdat(self) -> global___auth_data: ...
    def __init__(
        self,
        *,
        err: ft_error_pb2.errstatus | None = ...,
        sasl_data: builtins.bytes = ...,
        authdat: global___auth_data | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["authdat", b"authdat", "err", b"err"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authdat", b"authdat", "err", b"err", "sasl_data", b"sasl_data"]) -> None: ...

global___sasl_auth_data = sasl_auth_data

@typing_extensions.final
class auth_type_list(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ERR_FIELD_NUMBER: builtins.int
    MECHANISM_NAME_FIELD_NUMBER: builtins.int
    @property
    def err(self) -> ft_error_pb2.errstatus: ...
    @property
    def mechanism_name(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        err: ft_error_pb2.errstatus | None = ...,
        mechanism_name: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["err", b"err"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["err", b"err", "mechanism_name", b"mechanism_name"]) -> None: ...

global___auth_type_list = auth_type_list
