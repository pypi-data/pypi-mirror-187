# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['src']

package_data = \
{'': ['*']}

entry_points = \
{'console_scripts': ['sshc = src.sshc:__main__']}

setup_kwargs = {
    'name': 'sshc',
    'version': '0.8.0',
    'description': 'SSH Config and Ansible Inventory Generator.',
    'long_description': '# sshc - SSH Configuration Management Tool with Ansible Inventory Generation\nThis tool can help you manage ssh config files with hosts as well as ansible inventory file.\n\n## What it does?\n\n1. It creates a host database.\n2. Create SSH config from that host database.\n3. Create Ansible inventory from that same host database.\n\n### Example of generated SSH config\n```ini\n# Generated At: 2023-01-24 11:35:25.885044\n\n# -- <\nHost server1\nHostName 192.168.0.100\nPort 22\nUser ubuntu\nIdentityFile /home/fahad/.ssh/id_rsa\nLogLevel INFO\nCompression yes\n# Comment: Personal Server: ONE\n# -- >\n\n# -- <\nHost server2\nHostName 10.10.0.102\nPort 4522\nUser root\nIdentityFile /home/fahad/.ssh/id_rsa\nLogLevel DEBUG\nCompression no\n# Comment: Personal Server: TWO\n# -- >\n```\n### Example of generated Ansible Inventory\n```json\n{\n    "all": {\n        "hosts": {\n            "server1": {\n                "ansible_host": "192.168.0.100",\n                "ansible_port": 22,\n                "ansible_user": "ubuntu",\n                "ansible_ssh_private_key_file": "/home/fahad/.ssh/id_rsa"\n            },\n            "server2": {\n                "ansible_host": "10.10.0.102",\n                "ansible_port": 4522,\n                "ansible_user": "root",\n                "ansible_ssh_private_key_file": "/home/fahad/.ssh/id_rsa"\n            }\n        },\n        "children": {\n            "personal": {\n                "hosts": {\n                    "server1": null,\n                    "server2": null\n                }\n            },\n            "home": {\n                "hosts": {\n                    "server1": null\n                }\n            },\n            "storage": {\n                "hosts": {\n                    "server2": null\n                }\n            }\n        }\n    },\n    "others": {\n        "generated_at": "2023-01-24 11:35:25.885044"\n    }\n}\n```\n\n## Why?\n### Problem it tried to solve\n- Working with a bunch of servers gets messy to track those down.\n- Managing Ansible Inventory and also SSH config file separate is redundant.\n\n### Tried to solve via\n- Using a JSON file as a common database of hosts.\n- Setting name, ports, user, private key, ssh compression, ssh connection log level etc when inserting a host information.\n- Set groups, do comment on specific host for host management.\n- Well sorted config files.\n- Ansible inventory is managed using JSON file.\n- Add host to multiple groups which end up with ansible hosts group.\n- Remove ~~and update~~ host entry easily.\n\n## Description\n### Structure\n\n1. Insert host information to a JSON file as a DB.\n2. Generate SSH Config file and an Ansible Inventory file.\n\n### Technology Stack\n1. python\n2. json\n3. openssh\n4. ansible\n\n### Dependency\n\n#### Runtime\n- Python3.7+\n- Linux\n\n#### Development\n- Poetry\n\n## Installation\n\n```shell\n% pip3 install sshc --upgrade\n```\n\n## Usage\n\n### Step 1: Need the DB to be initiated for the first time\n#### Pattern\n```shell\nusage: sshc init [-h] [--destination DESTINATION] [--dbfile DBFILE]\n\noptions:\n  -h, --help            show this help message and exit\n  --destination DESTINATION\n                        Config HOME?\n  --dbfile DBFILE       SSHC DB File.\n\n```\n\n#### Example\n```shell\n% sshc init\n```\n\n### Step 2: Insert host information to the Database\n#### Pattern\n```shell\nusage: sshc insert [-h] --name NAME --host HOST [--user USER] [--port PORT] [--comment COMMENT] [--loglevel {INFO,DEBUG,ERROR,WARNING}] [--compression {yes,no}]\n                   [--groups GROUPS [GROUPS ...]] [--identityfile IDENTITYFILE] [--destination DESTINATION] [--dbfile DBFILE]\n\noptions:\n  -h, --help            show this help message and exit\n  --name NAME           Server Name?\n  --host HOST           SSH Host?\n  --user USER           SSH User?\n  --port PORT           SSH Port?\n  --comment COMMENT     SSH Identity File.\n  --loglevel {INFO,DEBUG,ERROR,WARNING}\n                        SSH Log Level.\n  --compression {yes,no}\n                        SSH Connection Compression.\n  --groups GROUPS [GROUPS ...]\n                        Which group to include?\n  --identityfile IDENTITYFILE\n                        SSH Default Identity File Location. i.e. id_rsa\n  --destination DESTINATION\n                        Config HOME?\n  --dbfile DBFILE       SSHC DB File.\n```\n\n#### Example\n```shell\n% sshc insert --name Google --host 8.8.8.8 --port 22 --user groot --identityfile /home/fahad/fahad.pem --comment "This is the server where you are not authorized to have access." --configfile /home/fahad/.ssh/config --groups google, fun\n```\n\n### Step 3: Generate ssh config and as well as ansible inventory file\n#### Pattern\n```shell\nusage: sshc generate [-h] [--configfile CONFIGFILE] [--inventoryfile INVENTORYFILE] [--destination DESTINATION] [--dbfile DBFILE]\n\noptions:\n  -h, --help            show this help message and exit\n  --configfile CONFIGFILE\n                        SSH Config File.\n  --inventoryfile INVENTORYFILE\n                        Ansible Inventory File.\n  --destination DESTINATION\n                        Config HOME?\n  --dbfile DBFILE       SSHC DB File.\n```\n#### Example\n\n```shell\n% python3 sshc.py generate\n```\n\nThis command will read all the entries in the DB and generate\n1. SSH config file in your preferred directory or default one(i.e. $HOME/.ssh/sshc_ssh_config).\n2. Ansible Inventory file will be created at your preferred directory or in default one (i.e. $HOME/.ssh/sshc_ansible_inventory.json).\n\nIf you stick with default directory you will find the generated files in:\n1. Default Directory: `$HOME/.ssh`\n2. Generated Ansible Inventory: `$HOME/.ssh/sshc_ansible_inventory.json`\n3. Generated SSH Config: `$HOME/.ssh/sshc_ssh_config`\n\nYou can use these configs like below.\n\nFor SSH,\n```shell\n% ssh -F $HOME/.ssh/sshc_ssh_config\n```\n\nFor Ansible,\n```shell\n% ansible -i $HOME/.ssh/sshc_ansible_inventory.json all --list-host\n```\n\n**Note: If you choose default SSH config file location and ansible host file location, sshc will replace the file. Be careful.**\n\n#### Recommended Way of Generating Configurations\n- There are two terms to keep in mind.\n  - SSH default\n  - sshc default\n- Use sshc default paths which is different from SSH and Ansible default config.\n- Use those newly created files(which should be separate than default one) either passing `-F` for SSH and `-i` for Ansible.\n\n### Others\nHelp message of the tool\n```shell\n% sshc --help\n```\n\n```shell\nusage: sshc [-h] [--version] {init,insert,delete,read,generate} ...\n\nSSH Config and Ansible Inventory Generator !\n\noptions:\n  -h, --help            show this help message and exit\n  --version             show program\'s version number and exit\n\nsubcommands:\n  The main command of this CLI tool.\n\n  {init,insert,delete,read,generate}\n                        The main commands have their own arguments.\n    init                Initiate Host DB !\n    insert              Insert host information !\n    delete              Delete host information !\n    read                Read Database !\n    generate            Generate necessary config files !\n```\n\n### Delete Inserted Data\n\n```shell\n% sshc delete --hostname <HOSTNAME>\n```\n\n### Read DB Data\n\n```shell\n% sshc read\n```\n\nYou can pass verbose too\n\n```shell\n% sshc read --verbose yes\n```\n\n## Known issues or Limitations\n\n- Tested in Ubuntu 22.04\n- Windows is not tested\n\n## Getting help\nIf you have questions, concerns, bug reports and others, please file an issue in this repository\'s Issue Tracker.\n\n## Getting involved\nIf you want to contribute to this tool, feel free to fork the repo and create Pull request with your changes.\nKeep in mind to\n- include better comment to understand.\n- create PR to **development** branch.\n\n---\n## Author\n- [Fahad Ahammed - DevOps Enthusiast - Dhaka, Bangladesh](https://github.com/fahadahammed)',
    'author': 'fahadahammed',
    'author_email': 'iamfahadahammed@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/fahadahammed/sshc',
    'packages': packages,
    'package_data': package_data,
    'entry_points': entry_points,
    'python_requires': '>=3.7,<4.0',
}


setup(**setup_kwargs)
