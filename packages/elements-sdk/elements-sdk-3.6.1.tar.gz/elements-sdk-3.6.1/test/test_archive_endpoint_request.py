# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.archive_endpoint_request import ArchiveEndpointRequest  # noqa: E501
from elements_sdk.rest import ApiException

class TestArchiveEndpointRequest(unittest.TestCase):
    """ArchiveEndpointRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ArchiveEndpointRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.archive_endpoint_request.ArchiveEndpointRequest()  # noqa: E501
        if include_optional :
            return ArchiveEndpointRequest(
                source = [
                    elements_sdk.models.tape_job_source.TapeJobSource(
                        path = '0', 
                        options = {
                            'key' : '0'
                            }, 
                        include = '0', )
                    ], 
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                name = '0', 
                group = 56, 
                group2 = 56, 
                export = True, 
                export2 = True
            )
        else :
            return ArchiveEndpointRequest(
                source = [
                    elements_sdk.models.tape_job_source.TapeJobSource(
                        path = '0', 
                        options = {
                            'key' : '0'
                            }, 
                        include = '0', )
                    ],
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = '0',
        )

    def testArchiveEndpointRequest(self):
        """Test ArchiveEndpointRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
