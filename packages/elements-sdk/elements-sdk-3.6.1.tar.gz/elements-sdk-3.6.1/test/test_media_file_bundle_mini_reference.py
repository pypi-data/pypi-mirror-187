# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.media_file_bundle_mini_reference import MediaFileBundleMiniReference  # noqa: E501
from elements_sdk.rest import ApiException

class TestMediaFileBundleMiniReference(unittest.TestCase):
    """MediaFileBundleMiniReference unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test MediaFileBundleMiniReference
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.media_file_bundle_mini_reference.MediaFileBundleMiniReference()  # noqa: E501
        if include_optional :
            return MediaFileBundleMiniReference(
                id = 56, 
                asset = 56, 
                name = '0', 
                location = 56, 
                mainfile = elements_sdk.models.media_file_mini.MediaFileMini(
                    id = 56, 
                    name = '0', 
                    bundle = 56, 
                    full_path = '0', 
                    custom_fields = {
                        'key' : '0'
                        }, 
                    is_dir = True, 
                    is_hardlink = True, 
                    mtime = 56, 
                    parent = 56, 
                    parent_file = {
                        'key' : '0'
                        }, 
                    path = '0', 
                    present = True, 
                    size = 56, 
                    volume = elements_sdk.models.volume_mini.VolumeMini(
                        id = 56, 
                        name = '0', 
                        path = '0', 
                        display_name = '0', 
                        visual_tag = '0', 
                        type = 'generic', ), )
            )
        else :
            return MediaFileBundleMiniReference(
        )

    def testMediaFileBundleMiniReference(self):
        """Test MediaFileBundleMiniReference"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
