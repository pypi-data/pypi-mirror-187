# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.task_type import TaskType  # noqa: E501
from elements_sdk.rest import ApiException

class TestTaskType(unittest.TestCase):
    """TaskType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TaskType
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.task_type.TaskType()  # noqa: E501
        if include_optional :
            return TaskType(
                type = '0', 
                display_name = '0', 
                display_group = '0', 
                input_type = '0', 
                abortable = True, 
                arg_template = {
                    'key' : '0'
                    }, 
                arg_types = {
                    'key' : elements_sdk.models.argument_type.ArgumentType(
                        display_name = '0', 
                        documentation = [
                            elements_sdk.models.type_documentation.TypeDocumentation(
                                name = '0', 
                                url = '0', )
                            ], )
                    }, 
                required_args = [
                    '0'
                    ], 
                output_names = {
                    'key' : '0'
                    }, 
                output_types = {
                    'key' : elements_sdk.models.argument_type.ArgumentType(
                        display_name = '0', 
                        documentation = [
                            elements_sdk.models.type_documentation.TypeDocumentation(
                                name = '0', 
                                url = '0', )
                            ], )
                    }, 
                parameters_editor_component = '0', 
                superuser_only = True, 
                icon_class = '0', 
                is_available = True, 
                allow_in_jobs = True, 
                new_since_version = '0'
            )
        else :
            return TaskType(
                type = '0',
                display_name = '0',
                display_group = '0',
                input_type = '0',
                abortable = True,
                arg_template = {
                    'key' : '0'
                    },
                required_args = [
                    '0'
                    ],
                output_names = {
                    'key' : '0'
                    },
                parameters_editor_component = '0',
                superuser_only = True,
                icon_class = '0',
                allow_in_jobs = True,
                new_since_version = '0',
        )

    def testTaskType(self):
        """Test TaskType"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
