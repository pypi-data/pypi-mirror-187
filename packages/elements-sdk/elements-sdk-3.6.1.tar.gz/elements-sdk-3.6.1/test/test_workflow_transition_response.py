# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.workflow_transition_response import WorkflowTransitionResponse  # noqa: E501
from elements_sdk.rest import ApiException

class TestWorkflowTransitionResponse(unittest.TestCase):
    """WorkflowTransitionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test WorkflowTransitionResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.workflow_transition_response.WorkflowTransitionResponse()  # noqa: E501
        if include_optional :
            return WorkflowTransitionResponse(
                tasks = [
                    elements_sdk.models.task_info.TaskInfo(
                        id = '0', 
                        display_name = '0', 
                        kwargs = {
                            'key' : '0'
                            }, 
                        subtask = elements_sdk.models.subtask.Subtask(
                            id = 56, 
                            kwargs = {
                                'key' : '0'
                                }, 
                            graph_layout = {
                                'key' : '0'
                                }, 
                            validation_error = '0', 
                            trigger = '0', 
                            name = '0', 
                            noop_dont_save = True, 
                            no_concurrency = True, 
                            timeout = -2147483648, 
                            log_variable = True, 
                            task = '0', 
                            condition_variable = '0', 
                            condition_value = '0', 
                            sync = True, 
                            queue = '0', 
                            enqueue_at_front = True, 
                            parent = 56, 
                            relative_to = 56, ), 
                        worker = elements_sdk.models.storage_node_mini.StorageNodeMini(
                            id = 56, 
                            name = '0', 
                            address = '0', 
                            type = 1, ), 
                        user = elements_sdk.models.elements_user_mini.ElementsUserMini(
                            id = 56, 
                            avatar = '0', 
                            display_name = '0', 
                            email = '0', 
                            full_name = '0', 
                            is_external = True, 
                            is_cloud = True, 
                            username = '0', ), 
                        workstation = elements_sdk.models.workstation.Workstation(
                            id = '0', 
                            display_name = '0', 
                            rdc_allow_users = [
                                elements_sdk.models.elements_user_reference.ElementsUserReference(
                                    id = 56, 
                                    allow_changing_password = True, 
                                    allow_wan_login = True, 
                                    allowed_fs_paths = [
                                        '0'
                                        ], 
                                    allowed_fs_write_paths = [
                                        '0'
                                        ], 
                                    avatar = '0', 
                                    client_sessions = [
                                        elements_sdk.models.client_session.ClientSession(
                                            id = 56, 
                                            user = elements_sdk.models.elements_user_mini.ElementsUserMini(
                                                id = 56, 
                                                avatar = '0', 
                                                display_name = '0', 
                                                email = '0', 
                                                full_name = '0', 
                                                is_external = True, 
                                                is_cloud = True, 
                                                username = '0', ), 
                                            mounted_workspaces = '0', 
                                            started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            workstation = elements_sdk.models.workstation_mini.WorkstationMini(
                                                id = '0', 
                                                display_name = '0', 
                                                hostname = '0', ), )
                                        ], 
                                    default_page = '0', 
                                    display_name = '0', 
                                    effective_permissions = [
                                        '0'
                                        ], 
                                    email = '0', 
                                    expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    ancillary_path_read_only = True, 
                                    ancillary_path = '0', 
                                    fm_bookmarks = [
                                        '0'
                                        ], 
                                    full_name = '0', 
                                    gid = -2147483648, 
                                    group_permissions = [
                                        '0'
                                        ], 
                                    has_password = True, 
                                    home = 56, 
                                    is_external = True, 
                                    is_cloud = True, 
                                    is_cloud_default = True, 
                                    is_enabled = True, 
                                    language = 'en', 
                                    last_seen = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    ldap = 56, 
                                    ldap_dn = '0', 
                                    password_change_required = True, 
                                    permissions = [
                                        '0'
                                        ], 
                                    shaper_ceiling = -9223372036854776000, 
                                    shaper_rate = -9223372036854776000, 
                                    sync_id = '0', 
                                    totp_enabled = True, 
                                    uid = -2147483648, 
                                    unix_username = '0', 
                                    username = '0', )
                                ], 
                            rdc_allow_groups = [
                                elements_sdk.models.elements_group_reference.ElementsGroupReference(
                                    id = 56, 
                                    members_preview = [
                                        elements_sdk.models.member_preview.MemberPreview(
                                            id = 56, 
                                            avatar = '0', 
                                            email = '0', )
                                        ], 
                                    name = '0', 
                                    ldap_dn = '0', 
                                    unix_groupname = '0', 
                                    gid = -2147483648, 
                                    ancillary_path = '0', 
                                    ancillary_path_read_only = True, 
                                    ldap = 56, 
                                    members = [
                                        56
                                        ], )
                                ], 
                            report = {
                                'key' : '0'
                                }, 
                            client_sessions = [
                                elements_sdk.models.client_session.ClientSession(
                                    id = 56, 
                                    user = elements_sdk.models.elements_user_mini.ElementsUserMini(
                                        id = 56, 
                                        avatar = '0', 
                                        display_name = '0', 
                                        email = '0', 
                                        full_name = '0', 
                                        is_external = True, 
                                        is_cloud = True, 
                                        username = '0', ), 
                                    mounted_workspaces = '0', 
                                    started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    workstation = elements_sdk.models.workstation_mini.WorkstationMini(
                                        id = '0', 
                                        display_name = '0', 
                                        hostname = '0', ), )
                                ], 
                            name = '0', 
                            hostname = '0', 
                            rdc_last_used = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            rdc_disable_upnp = True, 
                            rdc_client_port = -2147483648, 
                            rdc_host_port = -2147483648, ), 
                        progress = elements_sdk.models.task_progress.TaskProgress(
                            message = '0', 
                            current = 56, 
                            max = 56, ), 
                        log_path = '0', 
                        name = '0', 
                        task_name = '0', 
                        worker_name = '0', 
                        queue = '0', 
                        state = 0, 
                        state_text = '0', 
                        job_instance = '0', 
                        started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        finished = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        exception = '0', 
                        traceback = '0', 
                        schedule = 56, )
                    ]
            )
        else :
            return WorkflowTransitionResponse(
                tasks = [
                    elements_sdk.models.task_info.TaskInfo(
                        id = '0', 
                        display_name = '0', 
                        kwargs = {
                            'key' : '0'
                            }, 
                        subtask = elements_sdk.models.subtask.Subtask(
                            id = 56, 
                            kwargs = {
                                'key' : '0'
                                }, 
                            graph_layout = {
                                'key' : '0'
                                }, 
                            validation_error = '0', 
                            trigger = '0', 
                            name = '0', 
                            noop_dont_save = True, 
                            no_concurrency = True, 
                            timeout = -2147483648, 
                            log_variable = True, 
                            task = '0', 
                            condition_variable = '0', 
                            condition_value = '0', 
                            sync = True, 
                            queue = '0', 
                            enqueue_at_front = True, 
                            parent = 56, 
                            relative_to = 56, ), 
                        worker = elements_sdk.models.storage_node_mini.StorageNodeMini(
                            id = 56, 
                            name = '0', 
                            address = '0', 
                            type = 1, ), 
                        user = elements_sdk.models.elements_user_mini.ElementsUserMini(
                            id = 56, 
                            avatar = '0', 
                            display_name = '0', 
                            email = '0', 
                            full_name = '0', 
                            is_external = True, 
                            is_cloud = True, 
                            username = '0', ), 
                        workstation = elements_sdk.models.workstation.Workstation(
                            id = '0', 
                            display_name = '0', 
                            rdc_allow_users = [
                                elements_sdk.models.elements_user_reference.ElementsUserReference(
                                    id = 56, 
                                    allow_changing_password = True, 
                                    allow_wan_login = True, 
                                    allowed_fs_paths = [
                                        '0'
                                        ], 
                                    allowed_fs_write_paths = [
                                        '0'
                                        ], 
                                    avatar = '0', 
                                    client_sessions = [
                                        elements_sdk.models.client_session.ClientSession(
                                            id = 56, 
                                            user = elements_sdk.models.elements_user_mini.ElementsUserMini(
                                                id = 56, 
                                                avatar = '0', 
                                                display_name = '0', 
                                                email = '0', 
                                                full_name = '0', 
                                                is_external = True, 
                                                is_cloud = True, 
                                                username = '0', ), 
                                            mounted_workspaces = '0', 
                                            started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            workstation = elements_sdk.models.workstation_mini.WorkstationMini(
                                                id = '0', 
                                                display_name = '0', 
                                                hostname = '0', ), )
                                        ], 
                                    default_page = '0', 
                                    display_name = '0', 
                                    effective_permissions = [
                                        '0'
                                        ], 
                                    email = '0', 
                                    expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    ancillary_path_read_only = True, 
                                    ancillary_path = '0', 
                                    fm_bookmarks = [
                                        '0'
                                        ], 
                                    full_name = '0', 
                                    gid = -2147483648, 
                                    group_permissions = [
                                        '0'
                                        ], 
                                    has_password = True, 
                                    home = 56, 
                                    is_external = True, 
                                    is_cloud = True, 
                                    is_cloud_default = True, 
                                    is_enabled = True, 
                                    language = 'en', 
                                    last_seen = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    ldap = 56, 
                                    ldap_dn = '0', 
                                    password_change_required = True, 
                                    permissions = [
                                        '0'
                                        ], 
                                    shaper_ceiling = -9223372036854776000, 
                                    shaper_rate = -9223372036854776000, 
                                    sync_id = '0', 
                                    totp_enabled = True, 
                                    uid = -2147483648, 
                                    unix_username = '0', 
                                    username = '0', )
                                ], 
                            rdc_allow_groups = [
                                elements_sdk.models.elements_group_reference.ElementsGroupReference(
                                    id = 56, 
                                    members_preview = [
                                        elements_sdk.models.member_preview.MemberPreview(
                                            id = 56, 
                                            avatar = '0', 
                                            email = '0', )
                                        ], 
                                    name = '0', 
                                    ldap_dn = '0', 
                                    unix_groupname = '0', 
                                    gid = -2147483648, 
                                    ancillary_path = '0', 
                                    ancillary_path_read_only = True, 
                                    ldap = 56, 
                                    members = [
                                        56
                                        ], )
                                ], 
                            report = {
                                'key' : '0'
                                }, 
                            client_sessions = [
                                elements_sdk.models.client_session.ClientSession(
                                    id = 56, 
                                    user = elements_sdk.models.elements_user_mini.ElementsUserMini(
                                        id = 56, 
                                        avatar = '0', 
                                        display_name = '0', 
                                        email = '0', 
                                        full_name = '0', 
                                        is_external = True, 
                                        is_cloud = True, 
                                        username = '0', ), 
                                    mounted_workspaces = '0', 
                                    started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    workstation = elements_sdk.models.workstation_mini.WorkstationMini(
                                        id = '0', 
                                        display_name = '0', 
                                        hostname = '0', ), )
                                ], 
                            name = '0', 
                            hostname = '0', 
                            rdc_last_used = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            rdc_disable_upnp = True, 
                            rdc_client_port = -2147483648, 
                            rdc_host_port = -2147483648, ), 
                        progress = elements_sdk.models.task_progress.TaskProgress(
                            message = '0', 
                            current = 56, 
                            max = 56, ), 
                        log_path = '0', 
                        name = '0', 
                        task_name = '0', 
                        worker_name = '0', 
                        queue = '0', 
                        state = 0, 
                        state_text = '0', 
                        job_instance = '0', 
                        started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        finished = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        exception = '0', 
                        traceback = '0', 
                        schedule = 56, )
                    ],
        )

    def testWorkflowTransitionResponse(self):
        """Test WorkflowTransitionResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
