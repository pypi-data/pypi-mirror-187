# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.system_info_endpoint_response import SystemInfoEndpointResponse  # noqa: E501
from elements_sdk.rest import ApiException

class TestSystemInfoEndpointResponse(unittest.TestCase):
    """SystemInfoEndpointResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SystemInfoEndpointResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.system_info_endpoint_response.SystemInfoEndpointResponse()  # noqa: E501
        if include_optional :
            return SystemInfoEndpointResponse(
                license = elements_sdk.models.license.License(
                    name = '0', 
                    product = '0', 
                    serial = '0', 
                    partner = '0', 
                    hardware = '0', 
                    hardware_key = '0', 
                    expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    components = {
                        'key' : True
                        }, 
                    components_expiry = {
                        'key' : datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                        }, 
                    components_enabled = {
                        'key' : True
                        }, 
                    rdc_slots = 56, 
                    users = 56, 
                    third_party_capacity = 56, ), 
                client_api_version = 56, 
                nt_hostname = '0', 
                offers_ntp_sync = True, 
                language = '0', 
                saml_providers = [
                    elements_sdk.models.saml_provider_mini.SAMLProviderMini(
                        id = 56, 
                        name = '0', 
                        login_url = '0', )
                    ], 
                version = elements_sdk.models.elements_version.ElementsVersion(
                    release = '0', 
                    branch = '0', 
                    patch_count = 56, 
                    patch_commit_count = 56, ), 
                global_alerts = [
                    elements_sdk.models.global_alert.GlobalAlert(
                        text = '0', )
                    ]
            )
        else :
            return SystemInfoEndpointResponse(
                license = elements_sdk.models.license.License(
                    name = '0', 
                    product = '0', 
                    serial = '0', 
                    partner = '0', 
                    hardware = '0', 
                    hardware_key = '0', 
                    expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    components = {
                        'key' : True
                        }, 
                    components_expiry = {
                        'key' : datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                        }, 
                    components_enabled = {
                        'key' : True
                        }, 
                    rdc_slots = 56, 
                    users = 56, 
                    third_party_capacity = 56, ),
                client_api_version = 56,
                nt_hostname = '0',
                offers_ntp_sync = True,
                language = '0',
                version = elements_sdk.models.elements_version.ElementsVersion(
                    release = '0', 
                    branch = '0', 
                    patch_count = 56, 
                    patch_commit_count = 56, ),
                global_alerts = [
                    elements_sdk.models.global_alert.GlobalAlert(
                        text = '0', )
                    ],
        )

    def testSystemInfoEndpointResponse(self):
        """Test SystemInfoEndpointResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
