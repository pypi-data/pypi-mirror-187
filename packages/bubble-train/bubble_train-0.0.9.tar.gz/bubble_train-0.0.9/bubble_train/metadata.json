{
  "src/lib/components/BubbleTrain.react.js": {
    "description": "ExampleComponent is an example component.\r\nIt takes a property, `label`, and\r\ndisplays it.\r\nIt renders an input with the property `value`\r\nwhich is editable by the user.",
    "displayName": "BubbleTrain",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/Connector.react.js": {
    "description": "",
    "displayName": "Connector",
    "methods": [
      {
        "name": "setProps",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "newProps",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "getProps",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "update_ref_store",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "clean_ref_store",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "clean_pos_list",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "is_moving",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "stop_moving",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "get_path",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "new_pos_list",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "set_path",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "pos_list",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "update_path",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "do_move",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "set_target",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "do_scroll",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "do_up",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "do_down",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "do_escape",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "set_ref1",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "node",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "stroke": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "\"#ccc\"",
          "computed": false
        }
      },
      "strokeWidth": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "\"3\"",
          "computed": false
        }
      },
      "fill": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "\"none\"",
          "computed": false
        }
      },
      "x": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "100",
          "computed": false
        }
      },
      "y": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "100",
          "computed": false
        }
      },
      "r": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "8",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "\"#ccc\"",
          "computed": false
        }
      },
      "pos_list": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "arrayOf",
            "value": {
              "name": "number"
            }
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "path_list": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "target_list": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "target_pl_list": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "arrayOf",
            "value": {
              "name": "arrayOf",
              "value": {
                "name": "number"
              }
            }
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/DraggablePanel.react.js": {
    "description": "",
    "displayName": "DraggablePanel",
    "methods": [
      {
        "name": "set_dot_refresh",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "refresh_call",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "setProps",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "newProps",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "getProps",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "isMouseInBound",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "hlDragStart",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "do_refresh",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "hlDrag",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "hlDragEnd",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_in_set_ref_func",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "idx",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "get_out_set_ref_func",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "idx",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "children": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "node"
              }
            },
            {
              "name": "node"
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "width": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "'100px'",
          "computed": false
        }
      },
      "height": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "'100px'",
          "computed": false
        }
      },
      "left": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "'50px'",
          "computed": false
        }
      },
      "top": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "'50px'",
          "computed": false
        }
      },
      "cx0": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "cy0": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "x0": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "y0": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "cnt_h": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "'100%'",
          "computed": false
        }
      },
      "hdr_h": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "20",
          "computed": false
        }
      },
      "input_ids": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "output_ids": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "output_target_lists": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "arrayOf",
            "value": {
              "name": "string"
            }
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "output_target_pl_lists": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "arrayOf",
            "value": {
              "name": "arrayOf",
              "value": {
                "name": "arrayOf",
                "value": {
                  "name": "number"
                }
              }
            }
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "in_dot_offset": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "10",
          "computed": false
        }
      },
      "in_dot_distance": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "20",
          "computed": false
        }
      },
      "out_dot_offset": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "10",
          "computed": false
        }
      },
      "out_dot_distance": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "20",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/DrawCanvas.react.js": {
    "description": "",
    "displayName": "DrawCanvas",
    "methods": [
      {
        "name": "setProps",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "newProps",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "hlMouseDown",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "hlMouseMove",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "hlMouseUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "refresh": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/GridLayout.react.js": {
    "description": "GridLayout is a component for building\r\ndashboards with draggable and resizable items.\r\nIt takes a list of children and display them in\r\ndiv elements that can be moved around the page.\r\nThe initial size of each element can either be\r\ndefined with the layout argument or by wrapping\r\neach element with the DashboardItem component.\r\nBy default, GridLayout will saved the\r\nposition of the elements on client side, when\r\nmoved on the page. But you can also save it\r\non server side by defining a callback with :\r\n`Input(\"<my-id>\", \"layout\")`.",
    "displayName": "GridLayout",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "(string) The ID used to identify this component in Dash callbacks.\r\nThe id is also used to automatically save the layout on client side."
      },
      "layout": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "object"
          }
        },
        "required": false,
        "description": "Layout is a list of dictionnary with the format:\r\n{x: number, y: number, w: number, h: number}\r\nThe index into the layout must match the id used on each item component with DashboardItem.\r\nIf you choose to use custom keys, you can specify that key in the layout\r\narray objects like so:\r\n{i: string, x: number, y: number, w: number, h: number}\r\nThe ID used to identify this component in Dash callbacks.\r\nThe id is also used to automatically save the layout on client side."
      },
      "children": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "node"
              }
            },
            {
              "name": "node"
            }
          ]
        },
        "required": false,
        "description": "Children is a list of the elements to drag and resize on the dashboard.\r\nIt can be a list of dash Components and/or DashboardItem.",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "save": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "(bool) If False, then the layout is not saved in the browser.\r\nDefault value is True.",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "clearSavedLayout": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "(bool) If set to true, then the layout saved in the client browser\r\nwill be cleared on page load.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "ncols": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "(number) the default number of columns by item.\r\nDefault value is 6."
      },
      "nrows": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "(number) the default number of row by item.\r\nDefault value is 8."
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "(number) width (in px).\r\nDefault value is 1200."
      },
      "gridCols": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "(number) number of columns in the grid layout.\r\nDefault value is 12."
      },
      "height": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "(number) height of a row (in px).\r\nDefault value is 30."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "(string) class passed to the react-grid-layout component",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "(dict) css style passed to the react-grid-layout component",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "autoSize": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "draggableCancel": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "draggableHandle": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "verticalCompact": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "compactType": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'vertical'",
              "computed": false
            },
            {
              "value": "'horizontal'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "'vertical'",
          "computed": false
        }
      },
      "margin": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "number"
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[10, 10]",
          "computed": false
        }
      },
      "containerPadding": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "number"
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[10, 10]",
          "computed": false
        }
      },
      "isDraggable": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "isResizable": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "isBounded": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "useCSSTransforms": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "transformScale": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "preventCollision": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "isDroppable": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "resizeHandles": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "enum",
            "value": [
              {
                "value": "'s'",
                "computed": false
              },
              {
                "value": "'w'",
                "computed": false
              },
              {
                "value": "'e'",
                "computed": false
              },
              {
                "value": "'n'",
                "computed": false
              },
              {
                "value": "'sw'",
                "computed": false
              },
              {
                "value": "'nw'",
                "computed": false
              },
              {
                "value": "'se'",
                "computed": false
              },
              {
                "value": "'ne'",
                "computed": false
              }
            ]
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "['se']",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/TextInput.react.js": {
    "description": "",
    "displayName": "TextInput",
    "methods": [
      {
        "name": "handleInputChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "\"Text Input\"",
          "computed": false
        }
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": ""
      }
    }
  }
}