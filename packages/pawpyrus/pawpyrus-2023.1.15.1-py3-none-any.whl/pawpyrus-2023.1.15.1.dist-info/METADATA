Metadata-Version: 2.1
Name: pawpyrus
Version: 2023.1.15.1
Summary: A minimalist paper data storage based on QR codes
Project-URL: Homepage, https://github.com/regnveig/pawpyrus
Project-URL: Bug Tracker, https://github.com/regnveig/pawpyrus/issues
Author-email: Emil Viesn√° <regnveig@yandex.ru>
License-Expression: GPL-3.0-or-later
License-File: LICENSE
Keywords: ArUco,QR,data storage,paper
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Requires-Dist: argparse
Requires-Dist: bitarray
Requires-Dist: more-itertools
Requires-Dist: numpy
Requires-Dist: opencv-contrib-python
Requires-Dist: opencv-python
Requires-Dist: pyzbar
Requires-Dist: qrcode
Requires-Dist: reportlab
Requires-Dist: svglib
Requires-Dist: tqdm
Description-Content-Type: text/markdown

&nbsp;

![Logo](https://raw.githubusercontent.com/regnveig/pawpyrus/stable/logo.svg)

## Description

![PyPI](https://img.shields.io/pypi/v/pawpyrus?style=flat-square)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pawpyrus?style=flat-square)
![PyPI - Status](https://img.shields.io/pypi/status/pawpyrus?style=flat-square)
![PyPI - Downloads](https://img.shields.io/pypi/dm/pawpyrus?style=flat-square)
![GitHub last commit (branch)](https://img.shields.io/github/last-commit/regnveig/pawpyrus/sandbox?style=flat-square)
![GitHub issues](https://img.shields.io/github/issues/regnveig/pawpyrus?style=flat-square)
![GitHub](https://img.shields.io/github/license/regnveig/pawpyrus?style=flat-square)

Pawpyrus is a minimalist open-source paper data storage based on QR codes and ArUco.
It generates a PDF from any small-sized binary file (recommended size <100kb).
Further, the paper data storage can be scanned and decoded (recommended resolution 300dpi).

It can be useful if you need to backup data on paper:

* Encryption keys (e.g. [GnuPG](https://gnupg.org))
* File-based password databases (e.g. [KeePassXC](https://keepassxc.org))
* Cryptocurrency wallets

## Installation

The script is pure Python and a part of [PyPI](https://pypi.org/project/pawpyrus), so can be installed via *pip*:

```bash
python3 -m pip install pawpyrus
```

## Usage

**NOTE:** Backward compatibility is not provided yet. To decode a document, please use exactly the version which was used to encode it.

Encoder:

```bash
pawpyrus Encode -n "Description" -i  "input.file" -o "output.pdf"
```

Also, pawpyrus can read data from stdin.
For example, encoding GPG public keys:

```bash
gpg --export regnveig@yandex.ru | pawpyrus Encode -n "Reqnveig Public Key" -i - -o "regnveig-pubkey.pdf"
```

Decoder:

```bash
pawpyrus Decode -i "scan1.jpg" "scan2.png" "scan3.jpg" "masked/too/*.png" -o "output.file"
```

Pawpyrus PDF example you can see [here](https://github.com/regnveig/pawpyrus/tree/stable/examples).

## Data Format

Pawpyrus uses a custom alphanumeric encoding, which is designed to store information in QR code effectively.
For now, that makes 4.3kb per A4 page (pixel size 0.6 mm).

## Got a Trouble?

**QR and ArUco detectors may fail on one or several blocks.**
The situation is totally normal, although uncomfortable.
I fixed it for now, with two detectors ([opencv](https://github.com/opencv/opencv-python) and [pyzbar](https://github.com/NaturalHistoryMuseum/pyzbar)) instead of one, but the bug may reappear in some circumstances.
That's why I implemented Debug Mode:

```bash
pawpyrus Decode -d "debug_dir" -i "scan1.jpg" "scan2.jpg" "scan3.jpg" -o  "output.file"
```

With Debug Mode, you can inspect undetected QR codes, read them manually with any device you have, and create a file with text blocks which can be processed as well:

```bash
pawpyrus Decode "scan1.jpg" "scan2.jpg" "scan3.jpg" -t "unrecognized_codes.txt" -o "output.file"
```

Output Debug Dir example you can see [here](https://github.com/regnveig/pawpyrus/tree/stable/examples).

If you have any idea how to fix the bug better, [please help](https://github.com/regnveig/pawpyrus/issues/4).

## Repository Mirrors

- Darktea (Darknet Gitea): [regnveig/pawpyrus](http://it7otdanqu7ktntxzm427cba6i53w6wlanlh23v5i3siqmos47pzhvyd.onion/regnveig/pawpyrus)

## Similar Projects

1. [intra2net/paperbackup](https://github.com/intra2net/paperbackup)
2. [Paperback by Olly](https://ollydbg.de/Paperbak/) and [Wikinaut/paperback-cli](https://github.com/Wikinaut/paperback-cli)
3. [colorsafe/colorsafe](https://github.com/colorsafe/colorsafe)
4. [Twibright Optar](http://ronja.twibright.com/optar)
5. [Paperkey](https://www.jabberwocky.com/software/paperkey)
6. [4bitfocus/asc-key-to-qr-code](https://github.com/4bitfocus/asc-key-to-qr-code)
