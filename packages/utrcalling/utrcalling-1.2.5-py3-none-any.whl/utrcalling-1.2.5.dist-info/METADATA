Metadata-Version: 2.1
Name: utrcalling
Version: 1.2.5
Summary: Package with tools to calculate molecule UTR sizes from RNA sequencing reads.
Home-page: https://github.com/AndreMacedo88/utrcalling
Author: AndrÃ© Lopes Martins Macedo
Author-email: andre.lopes.macedo@gmail.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3.9
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Requires-Dist: numpy (>=1.22.3)
Requires-Dist: pandas (>=1.3.0)
Requires-Dist: scipy
Requires-Dist: scikit-learn
Requires-Dist: regex
Requires-Dist: rapidfuzz (>=2.0.0)
Requires-Dist: joblib
Requires-Dist: anndata
Requires-Dist: scanpy
Requires-Dist: gtfparse (<2,>=1.2.1)
Requires-Dist: htseq
Requires-Dist: pybedtools
Requires-Dist: tqdm
Requires-Dist: psutil
Requires-Dist: pympler
Requires-Dist: coloredlogs
Requires-Dist: verboselogs
Requires-Dist: colorama

utrcalling
##########

Requisites
----------

Should download GTF and fasta files from http://ftp.ensembl.org/pub/

Installing
----------

Requirements
____________

Before using this module, you must have the following software installed in your environment:

- Python (tested on 3.9 but should work for later versions)
- BEDTools for generating the UTR reference regions pkl file. To install, visit https://github.com/arq5x/bedtools2. Alternatively, if using Anaconda, run ``conda install -c bioconda bedtools`` to install BEDTools in your current environment. Finally, make sure BEDTools is callable on the command-line.

Using pip
_________

This module is currently not available from PyPi.

From source
___________

1. Clone the git repository hosted at: https://github.com/AndreMacedo88/utrcalling
2. Go to the cloned directory in your local machine.
3. Run $ ``pip install .``

Development
___________

1. Clone the git repository hosted at: https://github.com/AndreMacedo88/utrcalling
2. Go to the cloned directory in your local machine.
3. Run $ ``pip install -e . --use-feature=in-tree-build``
   
This will install the package locally and in editable mode, where changes to the 
local files will update the package in real-time.

Run Tests
---------

After installation, you can:

- run the individual test files (example for one test file): 

``python -m unittest tests.test_core``

- Run all test files at once:

``utrcalling run_tests``
