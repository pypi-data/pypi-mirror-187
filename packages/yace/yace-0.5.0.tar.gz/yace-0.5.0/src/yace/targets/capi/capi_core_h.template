/**
 * {{ meta.brief }}
 *
{%- if meta.full %}
 * {{ meta.full | replace("\n", " ") }}
 *
{%- endif %}
 * NOTE: This file is auto-generated using yace: https://github.com/safl/yace
 *
 * Copyright (C) {{ meta.author }}
 * SPDX-License-Identifier: {{ meta.lic }}
 *
 * @file lib{{ meta.prefix }}.h
 */

{% for entity in entities recursive %}
{%- if entity.doc and entity.cls in ["enum", "struct", "union"] and not loop.depth0 %}
/**
 * {{ entity.doc }}
 *
 * @{{ entity.cls }} {{ meta.prefix }}_{{ entity.sym }}
 */
{%- endif -%}
{% if entity.cls in ["define"] -%}
#define {{ meta.prefix | upper }}_{{ entity.sym | upper }} = {{ entity.val.lit }} ///< {{ entity.doc }}
{%- elif entity.cls in ["enum"] %}
enum {{ meta.prefix }}_{{ entity.sym }} {
{%- for member in entity.members %}
	{{ meta.prefix | upper }}_{{ entity.sym | upper }}_{{ member.sym | upper }} = {{ '0x%0x' % member.val.lit }}, ///< {{ member.doc }}
{%- endfor %}
};
{%- elif entity.cls in ["struct", "union"] and not loop.depth0 -%}
{{ entity.cls }} {{ meta.prefix }}_{{ entity.sym }} { {{ loop(entity.members) }} };
{%- elif entity.cls in ["struct", "union"] and loop.depth0 -%}
{{ entity.cls }} { {{ loop(entity.members) }} }{% if entity.sym %} {{ meta.prefix }}_{{ entity.sym }}{% endif %};
{% elif entity.cls in ["bitfield"] %}
{% if entity.sym %} struct { {% endif %}
	{%- for member in entity.members %}
	uint{{ entity.dtype.width }}_t {{ member.sym }} : {{ member.width }}; ///< {{ member.doc }}
	{%- endfor %}
{% if entity.sym %}} {{ entity.sym }};{% endif %}
{%- elif entity.cls in ["field"] %}
{{ entity | render("typedecl") }}; ///< {{ entity.doc }}
{%- elif entity.cls in ["fun"] %}
/**
 * {{ entity.doc }}
 *
{%- for parameter in entity.parameters %}
 * @param {{ parameter.sym }} {{ parameter.doc }}
{%- endfor %}
{%- if entity.ret and entity.ret.doc %}
 *
 * @return {{ entity.ret.doc }}
{%- endif %}
 */
{{ entity.ret | render("retdecl") }} {{ entity.sym }}
({% for parameter in entity.parameters %}{{ parameter | render("typedecl") }}{{ ", " if not loop.last else "" }}{% endfor %});
{% endif %}
{% endfor %}
