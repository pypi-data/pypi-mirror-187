from .geometry import Geometry as Geometry
from _typeshed import Incomplete
from typing import Tuple

class CirclePath:
    x0: Incomplete
    r: Incomplete
    def __init__(self, x0: Tuple[float, float], r: float) -> None: ...
    def p(self, t): ...
    def dp_dt(self, t): ...

class Circle(Geometry):
    x0: Incomplete
    r: Incomplete
    paths: Incomplete
    def __init__(self, x0, r) -> None: ...
    def dist(self, x): ...
    def boundary_step(self, x): ...
    def plot(self, level_set: bool = ...) -> None: ...
